# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T13:49:25+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, ConfigDict, Field, RootModel, conint, constr


class AccessDeniedException(RootModel[Any]):
    root: Any


class AccessDeniedForDependencyException(RootModel[Any]):
    root: Any


class ApplicationLayerAutomaticResponseStatus(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class AssociateDRTLogBucketResponse(BaseModel):
    pass


class AssociateDRTRoleResponse(BaseModel):
    pass


class AssociateHealthCheckResponse(BaseModel):
    pass


class AssociateProactiveEngagementDetailsResponse(BaseModel):
    pass


class AttackId(
    RootModel[constr(pattern=r'[a-zA-Z0-9\\-]*', min_length=1, max_length=128)]
):
    root: constr(pattern=r'[a-zA-Z0-9\\-]*', min_length=1, max_length=128)


class AttackLayer(Enum):
    NETWORK = 'NETWORK'
    APPLICATION = 'APPLICATION'


class AttackPropertyIdentifier(Enum):
    DESTINATION_URL = 'DESTINATION_URL'
    REFERRER = 'REFERRER'
    SOURCE_ASN = 'SOURCE_ASN'
    SOURCE_COUNTRY = 'SOURCE_COUNTRY'
    SOURCE_IP_ADDRESS = 'SOURCE_IP_ADDRESS'
    SOURCE_USER_AGENT = 'SOURCE_USER_AGENT'
    WORDPRESS_PINGBACK_REFLECTOR = 'WORDPRESS_PINGBACK_REFLECTOR'
    WORDPRESS_PINGBACK_SOURCE = 'WORDPRESS_PINGBACK_SOURCE'


class AttackTimestamp(RootModel[datetime]):
    root: datetime


class AutoRenew(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class BlockAction(BaseModel):
    pass


class ContactNotes(
    RootModel[constr(pattern=r'^[\w\s\.\-,:/()+@]*$', min_length=1, max_length=1024)]
):
    root: constr(pattern=r'^[\w\s\.\-,:/()+@]*$', min_length=1, max_length=1024)


class CountAction(BaseModel):
    pass


class CreateProtectionGroupResponse(BaseModel):
    pass


class CreateSubscriptionRequest(BaseModel):
    pass


class CreateSubscriptionResponse(BaseModel):
    pass


class DeleteProtectionGroupResponse(BaseModel):
    pass


class DeleteProtectionResponse(BaseModel):
    pass


class DeleteSubscriptionRequest(BaseModel):
    pass


class DeleteSubscriptionResponse(BaseModel):
    pass


class DescribeAttackRequest(BaseModel):
    AttackId_1: AttackId = Field(..., alias='AttackId')


class DescribeAttackStatisticsRequest(BaseModel):
    pass


class DescribeDRTAccessRequest(BaseModel):
    pass


class DescribeEmergencyContactSettingsRequest(BaseModel):
    pass


class DescribeSubscriptionRequest(BaseModel):
    pass


class DisableApplicationLayerAutomaticResponseResponse(BaseModel):
    pass


class DisableProactiveEngagementRequest(BaseModel):
    pass


class DisableProactiveEngagementResponse(BaseModel):
    pass


class DisassociateDRTLogBucketResponse(BaseModel):
    pass


class DisassociateDRTRoleRequest(BaseModel):
    pass


class DisassociateDRTRoleResponse(BaseModel):
    pass


class DisassociateHealthCheckResponse(BaseModel):
    pass


class Double(RootModel[float]):
    root: float


class DurationInSeconds(RootModel[conint(ge=0)]):
    root: conint(ge=0)


class EmailAddress(
    RootModel[constr(pattern=r'^\S+@\S+\.\S+$', min_length=1, max_length=150)]
):
    root: constr(pattern=r'^\S+@\S+\.\S+$', min_length=1, max_length=150)


class EnableApplicationLayerAutomaticResponseResponse(BaseModel):
    pass


class EnableProactiveEngagementRequest(BaseModel):
    pass


class EnableProactiveEngagementResponse(BaseModel):
    pass


class GetSubscriptionStateRequest(BaseModel):
    pass


class HealthCheckArn(
    RootModel[
        constr(
            pattern=r'^arn:aws:route53:::healthcheck/\S{36}$',
            min_length=1,
            max_length=2048,
        )
    ]
):
    root: constr(
        pattern=r'^arn:aws:route53:::healthcheck/\S{36}$', min_length=1, max_length=2048
    )


class HealthCheckId(RootModel[str]):
    root: str


class HealthCheckIds(RootModel[List[HealthCheckId]]):
    root: List[HealthCheckId]


class Integer(RootModel[int]):
    root: int


class InternalErrorException(RootModel[Any]):
    root: Any


class InvalidOperationException(RootModel[Any]):
    root: Any


class InvalidPaginationTokenException(RootModel[Any]):
    root: Any


class InvalidParameterException(RootModel[Any]):
    root: Any


class InvalidResourceException(RootModel[Any]):
    root: Any


class LimitsExceededException(RootModel[Any]):
    root: Any


class LockedSubscriptionException(RootModel[Any]):
    root: Any


class LogBucket(
    RootModel[
        constr(
            pattern=r'^([a-z]|(\d(?!\d{0,2}\.\d{1,3}\.\d{1,3}\.\d{1,3})))([a-z\d]|(\.(?!(\.|-)))|(-(?!\.))){1,61}[a-z\d]$',
            min_length=3,
            max_length=63,
        )
    ]
):
    model_config = ConfigDict(
        regex_engine="python-re",
    )
    root: constr(
        pattern=r'^([a-z]|(\d(?!\d{0,2}\.\d{1,3}\.\d{1,3}\.\d{1,3})))([a-z\d]|(\.(?!(\.|-)))|(-(?!\.))){1,61}[a-z\d]$',
        min_length=3,
        max_length=63,
    )


class LogBucketList(RootModel[List[LogBucket]]):
    root: List[LogBucket] = Field(..., max_length=10, min_length=0)


class Long(RootModel[int]):
    root: int


class MaxResults(RootModel[conint(ge=0, le=10000)]):
    root: conint(ge=0, le=10000)


class NoAssociatedRoleException(RootModel[Any]):
    root: Any


class OptimisticLockException(RootModel[Any]):
    root: Any


class PhoneNumber(
    RootModel[constr(pattern=r'^\+[1-9]\d{1,14}$', min_length=1, max_length=16)]
):
    root: constr(pattern=r'^\+[1-9]\d{1,14}$', min_length=1, max_length=16)


class ProactiveEngagementStatus(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'
    PENDING = 'PENDING'


class ProtectedResourceType(Enum):
    CLOUDFRONT_DISTRIBUTION = 'CLOUDFRONT_DISTRIBUTION'
    ROUTE_53_HOSTED_ZONE = 'ROUTE_53_HOSTED_ZONE'
    ELASTIC_IP_ALLOCATION = 'ELASTIC_IP_ALLOCATION'
    CLASSIC_LOAD_BALANCER = 'CLASSIC_LOAD_BALANCER'
    APPLICATION_LOAD_BALANCER = 'APPLICATION_LOAD_BALANCER'
    GLOBAL_ACCELERATOR = 'GLOBAL_ACCELERATOR'


class ProtectedResourceTypeFilters(RootModel[List[ProtectedResourceType]]):
    root: List[ProtectedResourceType] = Field(..., max_length=1, min_length=1)


class ProtectionGroupAggregation(Enum):
    SUM = 'SUM'
    MEAN = 'MEAN'
    MAX = 'MAX'


class ProtectionGroupAggregationFilters(RootModel[List[ProtectionGroupAggregation]]):
    root: List[ProtectionGroupAggregation] = Field(..., max_length=1, min_length=1)


class ProtectionGroupArbitraryPatternLimits(BaseModel):
    MaxMembers: Long


class ProtectionGroupId(
    RootModel[constr(pattern=r'[a-zA-Z0-9\\-]*', min_length=1, max_length=36)]
):
    root: constr(pattern=r'[a-zA-Z0-9\\-]*', min_length=1, max_length=36)


class ProtectionGroupIdFilters(RootModel[List[ProtectionGroupId]]):
    root: List[ProtectionGroupId] = Field(..., max_length=1, min_length=1)


class ProtectionGroupPattern(Enum):
    ALL = 'ALL'
    ARBITRARY = 'ARBITRARY'
    BY_RESOURCE_TYPE = 'BY_RESOURCE_TYPE'


class ProtectionGroupPatternFilters(RootModel[List[ProtectionGroupPattern]]):
    root: List[ProtectionGroupPattern] = Field(..., max_length=1, min_length=1)


class ProtectionGroupPatternTypeLimits(BaseModel):
    ArbitraryPatternLimits: ProtectionGroupArbitraryPatternLimits


class ProtectionId(
    RootModel[constr(pattern=r'[a-zA-Z0-9\\-]*', min_length=36, max_length=36)]
):
    root: constr(pattern=r'[a-zA-Z0-9\\-]*', min_length=36, max_length=36)


class ProtectionName(
    RootModel[constr(pattern=r'[ a-zA-Z0-9_\\.\\-]*', min_length=1, max_length=128)]
):
    root: constr(pattern=r'[ a-zA-Z0-9_\\.\\-]*', min_length=1, max_length=128)


class ProtectionNameFilters(RootModel[List[ProtectionName]]):
    root: List[ProtectionName] = Field(..., max_length=1, min_length=1)


class ResourceAlreadyExistsException(RootModel[Any]):
    root: Any


class ResourceArn(
    RootModel[constr(pattern=r'^arn:aws.*', min_length=1, max_length=2048)]
):
    root: constr(pattern=r'^arn:aws.*', min_length=1, max_length=2048)


class ResourceArnFilterList(RootModel[List[ResourceArn]]):
    root: List[ResourceArn]


class ResourceArnFilters(RootModel[List[ResourceArn]]):
    root: List[ResourceArn] = Field(..., max_length=1, min_length=1)


class ResourceArnList(RootModel[List[ResourceArn]]):
    root: List[ResourceArn]


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class ResponseAction(BaseModel):
    Block: Optional[BlockAction] = None
    Count: Optional[CountAction] = None


class RoleArn(
    RootModel[
        constr(
            pattern=r'^arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+',
            min_length=1,
            max_length=2048,
        )
    ]
):
    root: constr(
        pattern=r'^arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+',
        min_length=1,
        max_length=2048,
    )


class String(RootModel[str]):
    root: str


class SubResourceType(Enum):
    IP = 'IP'
    URL = 'URL'


class SubscriptionState(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class SummarizedCounter(BaseModel):
    Average: Optional[Double] = None
    Max: Optional[Double] = None
    N: Optional[Integer] = None
    Name: Optional[String] = None
    Sum: Optional[Double] = None
    Unit: Optional[String] = None


class SummarizedCounterList(RootModel[List[SummarizedCounter]]):
    root: List[SummarizedCounter]


class TagKey(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class TagKeyList(RootModel[List[TagKey]]):
    root: List[TagKey] = Field(..., max_length=200, min_length=0)


class TagResourceResponse(BaseModel):
    pass


class TagValue(RootModel[constr(min_length=0, max_length=256)]):
    root: constr(min_length=0, max_length=256)


class Timestamp(RootModel[datetime]):
    root: datetime


class Token(RootModel[constr(pattern=r'^.*$', min_length=1, max_length=4096)]):
    root: constr(pattern=r'^.*$', min_length=1, max_length=4096)


class Unit(Enum):
    BITS = 'BITS'
    BYTES = 'BYTES'
    PACKETS = 'PACKETS'
    REQUESTS = 'REQUESTS'


class UntagResourceRequest(BaseModel):
    ResourceARN: ResourceArn
    TagKeys: TagKeyList


class UntagResourceResponse(BaseModel):
    pass


class UpdateApplicationLayerAutomaticResponseRequest(BaseModel):
    Action: ResponseAction
    ResourceArn_1: ResourceArn = Field(..., alias='ResourceArn')


class UpdateApplicationLayerAutomaticResponseResponse(BaseModel):
    pass


class UpdateEmergencyContactSettingsResponse(BaseModel):
    pass


class UpdateProtectionGroupResponse(BaseModel):
    pass


class UpdateSubscriptionRequest(BaseModel):
    AutoRenew_1: Optional[AutoRenew] = Field(None, alias='AutoRenew')


class UpdateSubscriptionResponse(BaseModel):
    pass


class XAmzTarget(Enum):
    AWSShield_20160616_AssociateDRTLogBucket = (
        'AWSShield_20160616.AssociateDRTLogBucket'
    )


class XAmzTarget1(Enum):
    AWSShield_20160616_AssociateDRTRole = 'AWSShield_20160616.AssociateDRTRole'


class XAmzTarget2(Enum):
    AWSShield_20160616_AssociateHealthCheck = 'AWSShield_20160616.AssociateHealthCheck'


class XAmzTarget3(Enum):
    AWSShield_20160616_AssociateProactiveEngagementDetails = (
        'AWSShield_20160616.AssociateProactiveEngagementDetails'
    )


class XAmzTarget4(Enum):
    AWSShield_20160616_CreateProtection = 'AWSShield_20160616.CreateProtection'


class XAmzTarget5(Enum):
    AWSShield_20160616_CreateProtectionGroup = (
        'AWSShield_20160616.CreateProtectionGroup'
    )


class XAmzTarget6(Enum):
    AWSShield_20160616_CreateSubscription = 'AWSShield_20160616.CreateSubscription'


class XAmzTarget7(Enum):
    AWSShield_20160616_DeleteProtection = 'AWSShield_20160616.DeleteProtection'


class XAmzTarget8(Enum):
    AWSShield_20160616_DeleteProtectionGroup = (
        'AWSShield_20160616.DeleteProtectionGroup'
    )


class XAmzTarget9(Enum):
    AWSShield_20160616_DeleteSubscription = 'AWSShield_20160616.DeleteSubscription'


class XAmzTarget10(Enum):
    AWSShield_20160616_DescribeAttack = 'AWSShield_20160616.DescribeAttack'


class XAmzTarget11(Enum):
    AWSShield_20160616_DescribeAttackStatistics = (
        'AWSShield_20160616.DescribeAttackStatistics'
    )


class XAmzTarget12(Enum):
    AWSShield_20160616_DescribeDRTAccess = 'AWSShield_20160616.DescribeDRTAccess'


class XAmzTarget13(Enum):
    AWSShield_20160616_DescribeEmergencyContactSettings = (
        'AWSShield_20160616.DescribeEmergencyContactSettings'
    )


class XAmzTarget14(Enum):
    AWSShield_20160616_DescribeProtection = 'AWSShield_20160616.DescribeProtection'


class XAmzTarget15(Enum):
    AWSShield_20160616_DescribeProtectionGroup = (
        'AWSShield_20160616.DescribeProtectionGroup'
    )


class XAmzTarget16(Enum):
    AWSShield_20160616_DescribeSubscription = 'AWSShield_20160616.DescribeSubscription'


class XAmzTarget17(Enum):
    AWSShield_20160616_DisableApplicationLayerAutomaticResponse = (
        'AWSShield_20160616.DisableApplicationLayerAutomaticResponse'
    )


class XAmzTarget18(Enum):
    AWSShield_20160616_DisableProactiveEngagement = (
        'AWSShield_20160616.DisableProactiveEngagement'
    )


class XAmzTarget19(Enum):
    AWSShield_20160616_DisassociateDRTLogBucket = (
        'AWSShield_20160616.DisassociateDRTLogBucket'
    )


class XAmzTarget20(Enum):
    AWSShield_20160616_DisassociateDRTRole = 'AWSShield_20160616.DisassociateDRTRole'


class XAmzTarget21(Enum):
    AWSShield_20160616_DisassociateHealthCheck = (
        'AWSShield_20160616.DisassociateHealthCheck'
    )


class XAmzTarget22(Enum):
    AWSShield_20160616_EnableApplicationLayerAutomaticResponse = (
        'AWSShield_20160616.EnableApplicationLayerAutomaticResponse'
    )


class XAmzTarget23(Enum):
    AWSShield_20160616_EnableProactiveEngagement = (
        'AWSShield_20160616.EnableProactiveEngagement'
    )


class XAmzTarget24(Enum):
    AWSShield_20160616_GetSubscriptionState = 'AWSShield_20160616.GetSubscriptionState'


class XAmzTarget25(Enum):
    AWSShield_20160616_ListAttacks = 'AWSShield_20160616.ListAttacks'


class XAmzTarget26(Enum):
    AWSShield_20160616_ListProtectionGroups = 'AWSShield_20160616.ListProtectionGroups'


class XAmzTarget27(Enum):
    AWSShield_20160616_ListProtections = 'AWSShield_20160616.ListProtections'


class XAmzTarget28(Enum):
    AWSShield_20160616_ListResourcesInProtectionGroup = (
        'AWSShield_20160616.ListResourcesInProtectionGroup'
    )


class XAmzTarget29(Enum):
    AWSShield_20160616_ListTagsForResource = 'AWSShield_20160616.ListTagsForResource'


class XAmzTarget30(Enum):
    AWSShield_20160616_TagResource = 'AWSShield_20160616.TagResource'


class XAmzTarget31(Enum):
    AWSShield_20160616_UntagResource = 'AWSShield_20160616.UntagResource'


class XAmzTarget32(Enum):
    AWSShield_20160616_UpdateApplicationLayerAutomaticResponse = (
        'AWSShield_20160616.UpdateApplicationLayerAutomaticResponse'
    )


class XAmzTarget33(Enum):
    AWSShield_20160616_UpdateEmergencyContactSettings = (
        'AWSShield_20160616.UpdateEmergencyContactSettings'
    )


class XAmzTarget34(Enum):
    AWSShield_20160616_UpdateProtectionGroup = (
        'AWSShield_20160616.UpdateProtectionGroup'
    )


class XAmzTarget35(Enum):
    AWSShield_20160616_UpdateSubscription = 'AWSShield_20160616.UpdateSubscription'


class ApplicationLayerAutomaticResponseConfiguration(BaseModel):
    Action: ResponseAction
    Status: ApplicationLayerAutomaticResponseStatus


class AssociateDRTLogBucketRequest(BaseModel):
    LogBucket_1: LogBucket = Field(..., alias='LogBucket')


class AssociateDRTRoleRequest(BaseModel):
    RoleArn_1: RoleArn = Field(..., alias='RoleArn')


class AssociateHealthCheckRequest(BaseModel):
    HealthCheckArn_1: HealthCheckArn = Field(..., alias='HealthCheckArn')
    ProtectionId_1: ProtectionId = Field(..., alias='ProtectionId')


class AttackVectorDescription(BaseModel):
    VectorType: String


class AttackVectorDescriptionList(RootModel[List[AttackVectorDescription]]):
    root: List[AttackVectorDescription]


class AttackVolumeStatistics(BaseModel):
    Max: Double


class Contributor(BaseModel):
    Name: Optional[String] = None
    Value: Optional[Long] = None


class CreateProtectionResponse(BaseModel):
    ProtectionId_1: Optional[ProtectionId] = Field(None, alias='ProtectionId')


class DeleteProtectionGroupRequest(BaseModel):
    ProtectionGroupId_1: ProtectionGroupId = Field(..., alias='ProtectionGroupId')


class DeleteProtectionRequest(BaseModel):
    ProtectionId_1: ProtectionId = Field(..., alias='ProtectionId')


class DescribeDRTAccessResponse(BaseModel):
    LogBucketList_1: Optional[LogBucketList] = Field(None, alias='LogBucketList')
    RoleArn_1: Optional[RoleArn] = Field(None, alias='RoleArn')


class DescribeProtectionGroupRequest(BaseModel):
    ProtectionGroupId_1: ProtectionGroupId = Field(..., alias='ProtectionGroupId')


class DescribeProtectionRequest(BaseModel):
    ProtectionId_1: Optional[ProtectionId] = Field(None, alias='ProtectionId')
    ResourceArn_1: Optional[ResourceArn] = Field(None, alias='ResourceArn')


class DisableApplicationLayerAutomaticResponseRequest(BaseModel):
    ResourceArn_1: ResourceArn = Field(..., alias='ResourceArn')


class DisassociateDRTLogBucketRequest(BaseModel):
    LogBucket_1: LogBucket = Field(..., alias='LogBucket')


class DisassociateHealthCheckRequest(BaseModel):
    HealthCheckArn_1: HealthCheckArn = Field(..., alias='HealthCheckArn')
    ProtectionId_1: ProtectionId = Field(..., alias='ProtectionId')


class EmergencyContact(BaseModel):
    ContactNotes_1: Optional[ContactNotes] = Field(None, alias='ContactNotes')
    EmailAddress_1: EmailAddress = Field(..., alias='EmailAddress')
    PhoneNumber_1: Optional[PhoneNumber] = Field(None, alias='PhoneNumber')


class EmergencyContactList(RootModel[List[EmergencyContact]]):
    root: List[EmergencyContact] = Field(..., max_length=10, min_length=0)


class EnableApplicationLayerAutomaticResponseRequest(BaseModel):
    Action: ResponseAction
    ResourceArn_1: ResourceArn = Field(..., alias='ResourceArn')


class GetSubscriptionStateResponse(BaseModel):
    SubscriptionState_1: SubscriptionState = Field(..., alias='SubscriptionState')


class InclusionProtectionFilters(BaseModel):
    ProtectionNames: Optional[ProtectionNameFilters] = None
    ResourceArns: Optional[ResourceArnFilters] = None
    ResourceTypes: Optional[ProtectedResourceTypeFilters] = None


class InclusionProtectionGroupFilters(BaseModel):
    Aggregations: Optional[ProtectionGroupAggregationFilters] = None
    Patterns: Optional[ProtectionGroupPatternFilters] = None
    ProtectionGroupIds: Optional[ProtectionGroupIdFilters] = None
    ResourceTypes: Optional[ProtectedResourceTypeFilters] = None


class Limit(BaseModel):
    Max: Optional[Long] = None
    Type: Optional[String] = None


class Limits(RootModel[List[Limit]]):
    root: List[Limit]


class ListProtectionGroupsRequest(BaseModel):
    InclusionFilters: Optional[InclusionProtectionGroupFilters] = None
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken: Optional[Token] = None


class ListProtectionsRequest(BaseModel):
    InclusionFilters: Optional[InclusionProtectionFilters] = None
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken: Optional[Token] = None


class ListResourcesInProtectionGroupRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken: Optional[Token] = None
    ProtectionGroupId_1: ProtectionGroupId = Field(..., alias='ProtectionGroupId')


class ListResourcesInProtectionGroupResponse(BaseModel):
    NextToken: Optional[Token] = None
    ResourceArns: ResourceArnList


class ListTagsForResourceRequest(BaseModel):
    ResourceARN: ResourceArn


class Mitigation(BaseModel):
    MitigationName: Optional[String] = None


class MitigationList(RootModel[List[Mitigation]]):
    root: List[Mitigation]


class Protection(BaseModel):
    ApplicationLayerAutomaticResponseConfiguration_1: Optional[
        ApplicationLayerAutomaticResponseConfiguration
    ] = Field(None, alias='ApplicationLayerAutomaticResponseConfiguration')
    HealthCheckIds_1: Optional[HealthCheckIds] = Field(None, alias='HealthCheckIds')
    Id: Optional[ProtectionId] = None
    Name: Optional[ProtectionName] = None
    ProtectionArn: Optional[ResourceArn] = None
    ResourceArn_1: Optional[ResourceArn] = Field(None, alias='ResourceArn')


class ProtectionGroupLimits(BaseModel):
    MaxProtectionGroups: Long
    PatternTypeLimits: ProtectionGroupPatternTypeLimits


class ProtectionGroupMembers(RootModel[List[ResourceArn]]):
    root: List[ResourceArn] = Field(..., max_length=10000, min_length=0)


class ProtectionLimits(BaseModel):
    ProtectedResourceTypeLimits: Limits


class Protections(RootModel[List[Protection]]):
    root: List[Protection]


class SubscriptionLimits(BaseModel):
    ProtectionGroupLimits_1: ProtectionGroupLimits = Field(
        ..., alias='ProtectionGroupLimits'
    )
    ProtectionLimits_1: ProtectionLimits = Field(..., alias='ProtectionLimits')


class SummarizedAttackVector(BaseModel):
    VectorCounters: Optional[SummarizedCounterList] = None
    VectorType: String


class SummarizedAttackVectorList(RootModel[List[SummarizedAttackVector]]):
    root: List[SummarizedAttackVector]


class Tag(BaseModel):
    Key: Optional[TagKey] = None
    Value: Optional[TagValue] = None


class TagList(RootModel[List[Tag]]):
    root: List[Tag] = Field(..., max_length=200, min_length=0)


class TagResourceRequest(BaseModel):
    ResourceARN: ResourceArn
    Tags: TagList


class TimeRange(BaseModel):
    FromInclusive: Optional[Timestamp] = None
    ToExclusive: Optional[Timestamp] = None


class TopContributors(RootModel[List[Contributor]]):
    root: List[Contributor]


class UpdateEmergencyContactSettingsRequest(BaseModel):
    EmergencyContactList_1: Optional[EmergencyContactList] = Field(
        None, alias='EmergencyContactList'
    )


class UpdateProtectionGroupRequest(BaseModel):
    Aggregation: ProtectionGroupAggregation
    Members: Optional[ProtectionGroupMembers] = None
    Pattern: ProtectionGroupPattern
    ProtectionGroupId_1: ProtectionGroupId = Field(..., alias='ProtectionGroupId')
    ResourceType: Optional[ProtectedResourceType] = None


class AssociateProactiveEngagementDetailsRequest(BaseModel):
    EmergencyContactList_1: EmergencyContactList = Field(
        ..., alias='EmergencyContactList'
    )


class AttackProperty(BaseModel):
    AttackLayer_1: Optional[AttackLayer] = Field(None, alias='AttackLayer')
    AttackPropertyIdentifier_1: Optional[AttackPropertyIdentifier] = Field(
        None, alias='AttackPropertyIdentifier'
    )
    TopContributors_1: Optional[TopContributors] = Field(None, alias='TopContributors')
    Total: Optional[Long] = None
    Unit_1: Optional[Unit] = Field(None, alias='Unit')


class AttackSummary(BaseModel):
    AttackId: Optional[String] = None
    AttackVectors: Optional[AttackVectorDescriptionList] = None
    EndTime: Optional[AttackTimestamp] = None
    ResourceArn: Optional[String] = None
    StartTime: Optional[AttackTimestamp] = None


class AttackVolume(BaseModel):
    BitsPerSecond: Optional[AttackVolumeStatistics] = None
    PacketsPerSecond: Optional[AttackVolumeStatistics] = None
    RequestsPerSecond: Optional[AttackVolumeStatistics] = None


class CreateProtectionGroupRequest(BaseModel):
    Aggregation: ProtectionGroupAggregation
    Members: Optional[ProtectionGroupMembers] = None
    Pattern: ProtectionGroupPattern
    ProtectionGroupId_1: ProtectionGroupId = Field(..., alias='ProtectionGroupId')
    ResourceType: Optional[ProtectedResourceType] = None
    Tags: Optional[TagList] = None


class CreateProtectionRequest(BaseModel):
    Name: ProtectionName
    ResourceArn_1: ResourceArn = Field(..., alias='ResourceArn')
    Tags: Optional[TagList] = None


class DescribeEmergencyContactSettingsResponse(BaseModel):
    EmergencyContactList_1: Optional[EmergencyContactList] = Field(
        None, alias='EmergencyContactList'
    )


class DescribeProtectionResponse(BaseModel):
    Protection_1: Optional[Protection] = Field(None, alias='Protection')


class ListAttacksRequest(BaseModel):
    EndTime: Optional[TimeRange] = None
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken: Optional[Token] = None
    ResourceArns: Optional[ResourceArnFilterList] = None
    StartTime: Optional[TimeRange] = None


class ListProtectionsResponse(BaseModel):
    NextToken: Optional[Token] = None
    Protections_1: Optional[Protections] = Field(None, alias='Protections')


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None


class ProtectionGroup(BaseModel):
    Aggregation: ProtectionGroupAggregation
    Members: ProtectionGroupMembers
    Pattern: ProtectionGroupPattern
    ProtectionGroupArn: Optional[ResourceArn] = None
    ProtectionGroupId_1: ProtectionGroupId = Field(..., alias='ProtectionGroupId')
    ResourceType: Optional[ProtectedResourceType] = None


class ProtectionGroups(RootModel[List[ProtectionGroup]]):
    root: List[ProtectionGroup]


class SubResourceSummary(BaseModel):
    AttackVectors: Optional[SummarizedAttackVectorList] = None
    Counters: Optional[SummarizedCounterList] = None
    Id: Optional[String] = None
    Type: Optional[SubResourceType] = None


class SubResourceSummaryList(RootModel[List[SubResourceSummary]]):
    root: List[SubResourceSummary]


class Subscription(BaseModel):
    AutoRenew_1: Optional[AutoRenew] = Field(None, alias='AutoRenew')
    EndTime: Optional[Timestamp] = None
    Limits_1: Optional[Limits] = Field(None, alias='Limits')
    ProactiveEngagementStatus_1: Optional[ProactiveEngagementStatus] = Field(
        None, alias='ProactiveEngagementStatus'
    )
    StartTime: Optional[Timestamp] = None
    SubscriptionArn: Optional[ResourceArn] = None
    SubscriptionLimits_1: SubscriptionLimits = Field(..., alias='SubscriptionLimits')
    TimeCommitmentInSeconds: Optional[DurationInSeconds] = None


class AttackProperties(RootModel[List[AttackProperty]]):
    root: List[AttackProperty]


class AttackStatisticsDataItem(BaseModel):
    AttackCount: Long
    AttackVolume_1: Optional[AttackVolume] = Field(None, alias='AttackVolume')


class AttackStatisticsDataList(RootModel[List[AttackStatisticsDataItem]]):
    root: List[AttackStatisticsDataItem]


class AttackSummaries(RootModel[List[AttackSummary]]):
    root: List[AttackSummary]


class DescribeAttackStatisticsResponse(BaseModel):
    DataItems: AttackStatisticsDataList
    TimeRange_1: TimeRange = Field(..., alias='TimeRange')


class DescribeProtectionGroupResponse(BaseModel):
    ProtectionGroup_1: ProtectionGroup = Field(..., alias='ProtectionGroup')


class DescribeSubscriptionResponse(BaseModel):
    Subscription_1: Optional[Subscription] = Field(None, alias='Subscription')


class ListAttacksResponse(BaseModel):
    AttackSummaries_1: Optional[AttackSummaries] = Field(None, alias='AttackSummaries')
    NextToken: Optional[Token] = None


class ListProtectionGroupsResponse(BaseModel):
    NextToken: Optional[Token] = None
    ProtectionGroups_1: ProtectionGroups = Field(..., alias='ProtectionGroups')


class AttackDetail(BaseModel):
    AttackCounters: Optional[SummarizedCounterList] = None
    AttackId_1: Optional[AttackId] = Field(None, alias='AttackId')
    AttackProperties_1: Optional[AttackProperties] = Field(
        None, alias='AttackProperties'
    )
    EndTime: Optional[AttackTimestamp] = None
    Mitigations: Optional[MitigationList] = None
    ResourceArn_1: Optional[ResourceArn] = Field(None, alias='ResourceArn')
    StartTime: Optional[AttackTimestamp] = None
    SubResources: Optional[SubResourceSummaryList] = None


class DescribeAttackResponse(BaseModel):
    Attack: Optional[AttackDetail] = None
